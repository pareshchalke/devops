
DATE(1)                   BSD General Commands Manual                  DATE(1)

NNAAMMEE
     ddaattee -- display or set date and time

SSYYNNOOPPSSIISS
     ddaattee [--jjRRuu] [--rr _s_e_c_o_n_d_s | _f_i_l_e_n_a_m_e] [--vv [++|--]_v_a_l[_y_m_w_d_H_M_S]] _._._.
          [++_o_u_t_p_u_t___f_m_t]
     ddaattee [--jjnnuu] [[[_m_m]_d_d]_H_H]_M_M[[_c_c]_y_y][_._s_s]
     ddaattee [--jjnnRRuu] --ff _i_n_p_u_t___f_m_t _n_e_w___d_a_t_e [++_o_u_t_p_u_t___f_m_t]
     ddaattee [--dd _d_s_t] [--tt _m_i_n_u_t_e_s___w_e_s_t]

DDEESSCCRRIIPPTTIIOONN
     When invoked without arguments, the ddaattee utility displays the current
     date and time.  Otherwise, depending on the options specified, ddaattee will
     set the date and time or print it in a user-defined way.

     The ddaattee utility displays the date and time read from the kernel clock.
     When used to set the date and time, both the kernel clock and the hard-
     ware clock are updated.

     Only the superuser may set the date, and if the system securelevel (see
     securelevel(7)) is greater than 1, the time may not be changed by more
     than 1 second.

     The options are as follows:

     --dd _d_s_t  Set the kernel's value for daylight saving time.  If _d_s_t is non-
             zero, future calls to gettimeofday(2) will return a non-zero for
             _t_z___d_s_t_t_i_m_e.

     --ff      Use _i_n_p_u_t___f_m_t as the format string to parse the _n_e_w___d_a_t_e provided
             rather than using the default [[[_m_m]_d_d]_H_H]_M_M[[_c_c]_y_y][_._s_s] format.
             Parsing is done using strptime(3).

     --jj      Do not try to set the date.  This allows you to use the --ff flag
             in addition to the ++ option to convert one date format to
             another.

     --nn      By default, if the timed(8) daemon is running, ddaattee sets the time
             on all of the machines in the local group.  The --nn option sup-
             presses this behavior and causes the time to be set only on the
             current machine.

     --RR      Use RFC 2822 date and time output format. This is equivalent to
             use ``%a, %d %b %Y %T %z'' as _o_u_t_p_u_t___f_m_t while LC_TIME is set to
             the ``C'' locale .

     --rr _s_e_c_o_n_d_s
             Print the date and time represented by _s_e_c_o_n_d_s, where _s_e_c_o_n_d_s is
             the number of seconds since the Epoch (00:00:00 UTC, January 1,
             1970; see time(3)), and can be specified in decimal, octal, or
             hex.

     --rr _f_i_l_e_n_a_m_e
             Print the date and time of the last modification of _f_i_l_e_n_a_m_e.

     --tt _m_i_n_u_t_e_s___w_e_s_t
             Set the system's value for minutes west of GMT.  _m_i_n_u_t_e_s___w_e_s_t
             specifies the number of minutes returned in _t_z___m_i_n_u_t_e_s_w_e_s_t by
             future calls to gettimeofday(2).

     --uu      Display or set the date in UTC (Coordinated Universal) time.

     --vv      Adjust (i.e., take the current date and display the result of the
             adjustment; not actually set the date) the second, minute, hour,
             month day, week day, month or year according to _v_a_l.  If _v_a_l is
             preceded with a plus or minus sign, the date is adjusted forwards
             or backwards according to the remaining string, otherwise the
             relevant part of the date is set.  The date can be adjusted as
             many times as required using these flags.  Flags are processed in
             the order given.

             When setting values (rather than adjusting them), seconds are in
             the range 0-59, minutes are in the range 0-59, hours are in the
             range 0-23, month days are in the range 1-31, week days are in
             the range 0-6 (Sun-Sat), months are in the range 1-12 (Jan-Dec)
             and years are in the range 80-38 or 1980-2038.

             If _v_a_l is numeric, one of either _y, _m, _w, _d, _H, _M or _S must be
             used to specify which part of the date is to be adjusted.

             The week day or month may be specified using a name rather than a
             number.  If a name is used with the plus (or minus) sign, the
             date will be put forwards (or backwards) to the next (previous)
             date that matches the given week day or month.  This will not
             adjust the date, if the given week day or month is the same as
             the current one.

             When a date is adjusted to a specific value or in units greater
             than hours, daylight savings time considerations are ignored.
             Adjustments in units of hours or less honor daylight saving time.
             So, assuming the current date is March 26, 0:30 and that the DST
             adjustment means that the clock goes forward at 01:00 to 02:00,
             using --vv +1H will adjust the date to March 26, 2:30.  Likewise,
             if the date is October 29, 0:30 and the DST adjustment means that
             the clock goes back at 02:00 to 01:00, using --vv +3H will be nec-
             essary to reach October 29, 2:30.

             When the date is adjusted to a specific value that does not actu-
             ally exist (for example March 26, 1:30 BST 2000 in the
             Europe/London timezone), the date will be silently adjusted for-
             wards in units of one hour until it reaches a valid time.  When
             the date is adjusted to a specific value that occurs twice (for
             example October 29, 1:30 2000), the resulting timezone will be
             set so that the date matches the earlier of the two times.

             It is not possible to adjust a date to an invalid absolute day,
             so using the switches --vv 31d --vv 12m will simply fail five months
             of the year.  It is therefore usual to set the month before set-
             ting the day; using --vv 12m --vv 31d always works.

             Adjusting the date by months is inherently ambiguous because a
             month is a unit of variable length depending on the current date.
             This kind of date adjustment is applied in the most intuitive
             way.  First of all, ddaattee tries to preserve the day of the month.
             If it is impossible because the target month is shorter than the
             present one, the last day of the target month will be the result.
             For example, using --vv +1m on May 31 will adjust the date to June
             30, while using the same option on January 30 will result in the
             date adjusted to the last day of February.  This approach is also
             believed to make the most sense for shell scripting.  Neverthe-
             less, be aware that going forth and back by the same number of
             months may take you to a different date.

             Refer to the examples below for further details.

     An operand with a leading plus (`+') sign signals a user-defined format
     string which specifies the format in which to display the date and time.
     The format string may contain any of the conversion specifications
     described in the strftime(3) manual page, as well as any arbitrary text.
     A newline (`\n') character is always output after the characters speci-
     fied by the format string.  The format string for the default display is
     ``+%+''.

     If an operand does not have a leading plus sign, it is interpreted as a
     value for setting the system's notion of the current date and time.  The
     canonical representation for setting the date and time is:

           _c_c      Century (either 19 or 20) prepended to the abbreviated
                   year.
           _y_y      Year in abbreviated form (e.g., 89 for 1989, 06 for 2006).
           _m_m      Numeric month, a number from 1 to 12.
           _d_d      Day, a number from 1 to 31.
           _H_H      Hour, a number from 0 to 23.
           _M_M      Minutes, a number from 0 to 59.
           _s_s      Seconds, a number from 0 to 61 (59 plus a maximum of two
                   leap seconds).

     Everything but the minutes is optional.

     Time changes for Daylight Saving Time, standard time, leap seconds, and
     leap years are handled automatically.

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of ddaattee:

     TZ      The timezone to use when displaying dates.  The normal format is
             a pathname relative to _/_u_s_r_/_s_h_a_r_e_/_z_o_n_e_i_n_f_o.  For example, the
             command ``TZ=America/Los_Angeles date'' displays the current time
             in California.  See environ(7) for more information.

FFIILLEESS
     /var/log/messages  record of the user setting the time

EEXXIITT SSTTAATTUUSS
     The ddaattee utility exits 0 on success, 1 if unable to set the date, and 2
     if able to set the local date, but unable to set it globally.

EEXXAAMMPPLLEESS
     The command:

           date "+DATE: %Y-%m-%d%nTIME: %H:%M:%S"

     will display:

           DATE: 1987-11-21
           TIME: 13:36:16

     In the Europe/London timezone, the command:

           date -v1m -v+1y

     will display:

           Sun Jan  4 04:15:24 GMT 1998

     where it is currently Mon Aug  4 04:15:24 BST 1997.

     The command:

           date -v1d -v3m -v0y -v-1d

     will display the last day of February in the year 2000:

           Tue Feb 29 03:18:00 GMT 2000

     So will the command:

           date -v3m -v30d -v0y -v-1m

     because there is no such date as the 30th of February.

     The command:

           date -v1d -v+1m -v-1d -v-fri

     will display the last Friday of the month:

           Fri Aug 29 04:31:11 BST 1997

     where it is currently Mon Aug  4 04:31:11 BST 1997.

     The command:

           date 0613162785

     sets the date to ``June 13, 1985, 4:27 PM''.

           date "+%m%d%H%M%Y.%S"

     may be used on one machine to print out the date suitable for setting on
     another.

     The command:

           date 1432

     sets the time to 2:32 PM, without modifying the date.

     Finally the command:

           date -j -f "%a %b %d %T %Z %Y" "`date`" "+%s"

     can be used to parse the output from ddaattee and express it in Epoch time.

DDIIAAGGNNOOSSTTIICCSS
     Occasionally, when timed(8) synchronizes the time on many hosts, the set-
     ting of a new time value may require more than a few seconds.  On these
     occasions, ddaattee prints: `Network time being set'.  The message
     `Communication error with timed' occurs when the communication between
     ddaattee and timed(8) fails.

LLEEGGAACCYY SSYYNNOOPPSSIISS
     As above, except for the second line, which is:

     ddaattee [--jjnnuu] [[[[[_c_c]_y_y]_m_m]_d_d]_H_H]_M_M[_._s_s]

LLEEGGAACCYY DDIIAAGGNNOOSSTTIICCSS
     When invoked in legacy mode, the following exit values are returned:
     0  The date was written successfully
     1  Unable to set the date
     2  Able to set the local date, but unable to set it globally

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     locale(1), gettimeofday(2), getutxent(3), strftime(3), strptime(3),
     timed(8)

     R. Gusella and S. Zatti, _T_S_P_: _T_h_e _T_i_m_e _S_y_n_c_h_r_o_n_i_z_a_t_i_o_n _P_r_o_t_o_c_o_l _f_o_r _U_N_I_X
     _4_._3_B_S_D.

SSTTAANNDDAARRDDSS
     The ddaattee utility is expected to be compatible with IEEE Std 1003.2
     (``POSIX.2'').  The --dd, --ff, --jj, --nn, --rr, --tt, and --vv options are all exten-
     sions to the standard.

HHIISSTTOORRYY
     A ddaattee command appeared in Version 1 AT&T UNIX.

BSD                               May 7, 2015                              BSD



CHANGES at 19:19 PM
